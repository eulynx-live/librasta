name: Docker

on:
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DO_PUSH: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64,arm
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker (TCP)
      id: meta_tcp
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/rasta_grpc_bridge_tcp
        tags: |
            type=ref,event=branch
            type=sha

    - name: Build and push Docker image (TCP)
      uses: docker/build-push-action@v4
      with:
        file: docker/rasta_grpc_bridge/Dockerfile
        platforms: linux/amd64,linux/arm64,linux/arm
        push: ${{ env.DO_PUSH }}
        tags: ${{ steps.meta_tcp.outputs.tags }}
        target: tcp
        cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/rasta_grpc_bridge_tcp:main
        cache-to: type=inline

    - name: Extract metadata (tags, labels) for Docker (UDP)
      id: meta_udp
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/rasta_grpc_bridge_udp
        tags: |
            type=ref,event=branch
            type=sha

    - name: Build and push Docker image (UDP)
      uses: docker/build-push-action@v4
      with:
        file: docker/rasta_grpc_bridge/Dockerfile
        platforms: linux/amd64,linux/arm64,linux/arm
        push: ${{ env.DO_PUSH }}
        tags: ${{ steps.meta_udp.outputs.tags }}
        target: udp
        cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/rasta_grpc_bridge_udp:main
        cache-to: type=inline

    - name: Extract metadata (tags, labels) for Docker (TLS)
      id: meta_tls
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/rasta_grpc_bridge_tls
        tags: |
            type=ref,event=branch
            type=sha

    - name: Build and push Docker image (TLS)
      uses: docker/build-push-action@v4
      with:
        file: docker/rasta_grpc_bridge/Dockerfile
        platforms: linux/amd64,linux/arm64,linux/arm
        push: ${{ env.DO_PUSH }}
        tags: ${{ steps.meta_tls.outputs.tags }}
        target: tls
        cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/rasta_grpc_bridge_tls:main
        cache-to: type=inline

    - name: Extract metadata (tags, labels) for Docker (DTLS)
      id: meta_dtls
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/rasta_grpc_bridge_dtls
        tags: |
            type=ref,event=branch
            type=sha

    - name: Build and push Docker image (DTLS)
      uses: docker/build-push-action@v4
      with:
        file: docker/rasta_grpc_bridge/Dockerfile
        platforms: linux/amd64,linux/arm64,linux/arm
        push: ${{ env.DO_PUSH }}
        tags: ${{ steps.meta_dtls.outputs.tags }}
        target: dtls
        cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/rasta_grpc_bridge_dtls:main
        cache-to: type=inline