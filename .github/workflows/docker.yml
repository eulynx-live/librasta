name: Docker

on:
  push:
    # branches: [main]

env:
  REGISTRY: ghcr.io
  REGISTRY_IMAGE: ghcr.io/${{ github.repository }}/rasta_grpc_bridge
  DO_PUSH: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v7
          - linux/arm64
        variant:
          - tcp
          - udp
          - tls
          - dtls
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64,arm
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY_IMAGE }}_${{ matrix.variant }}
        tags: |
            type=ref,event=branch
            type=sha

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v4
      with:
        file: docker/rasta_grpc_bridge/Dockerfile
        platforms: ${{ matrix.platform }}
        labels: ${{ steps.meta.outputs.labels }}
        target: ${{ matrix.variant }}
        outputs: type=image,name=${{ env.REGISTRY_IMAGE }}_${{ matrix.variant }},push-by-digest=true,name-canonical=true,push=${{ env.DO_PUSH }}
        cache-from: type=registry,ref=${{ env.REGISTRY_IMAGE }}_${{ matrix.variant }}:main
        cache-to: type=inline

    - name: Export digest
      run: |
        mkdir -p /tmp/digests_${{ matrix.variant }}
        digest="${{ steps.build.outputs.digest }}"
        touch "/tmp/digests_${{ matrix.variant }}/${digest#sha256:}"
    
    - name: Upload digest
      uses: actions/upload-artifact@v3
      with:
        name: digests_${{ matrix.variant }}
        path: /tmp/digests_${{ matrix.variant }}/*
        if-no-files-found: error
        retention-days: 1
    
  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      matrix:
        variant:
          - tcp
          - udp
          - tls
          - dtls
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests_${{ matrix.variant }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}_${{ matrix.variant }}
          tags: |
            type=ref,event=branch
            type=sha

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        if: env.DO_PUSH
        working-directory: /tmp/digests_${{ matrix.variant }}
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}_${{ matrix.variant }}@sha256:%s ' *)
      
      - name: Inspect image
        if: env.DO_PUSH
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}_${{ matrix.variant }}:main